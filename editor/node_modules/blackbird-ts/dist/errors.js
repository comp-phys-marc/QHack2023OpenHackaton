"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.BadComplexError = exports.BadStrError = exports.BadBoolError = exports.BadFloatError = exports.BadIntError = exports.BadTypeError = exports.BadShapeError = exports.BadArrayError = exports.BadOperatorError = exports.BadRegisterError = exports.BadParameterError = exports.BadMeasurementError = exports.BadArgumentError = void 0;
/** Class representing a bad argument exception. */
var BadArgumentError = /** @class */ (function (_super) {
    __extends(BadArgumentError, _super);
    function BadArgumentError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadArgumentError.name;
        return _this;
    }
    return BadArgumentError;
}(Error));
exports.BadArgumentError = BadArgumentError;
/** Class representing a bad register exception. */
var BadRegisterError = /** @class */ (function (_super) {
    __extends(BadRegisterError, _super);
    function BadRegisterError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadRegisterError.name;
        return _this;
    }
    return BadRegisterError;
}(Error));
exports.BadRegisterError = BadRegisterError;
/** Class representing a bad parameter exception. */
var BadParameterError = /** @class */ (function (_super) {
    __extends(BadParameterError, _super);
    function BadParameterError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadParameterError.name;
        return _this;
    }
    return BadParameterError;
}(Error));
exports.BadParameterError = BadParameterError;
/** Class representing a bad measurement exception. */
var BadMeasurementError = /** @class */ (function (_super) {
    __extends(BadMeasurementError, _super);
    function BadMeasurementError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadMeasurementError.name;
        return _this;
    }
    return BadMeasurementError;
}(Error));
exports.BadMeasurementError = BadMeasurementError;
/** Class representing a bad operator exception. */
var BadOperatorError = /** @class */ (function (_super) {
    __extends(BadOperatorError, _super);
    function BadOperatorError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadOperatorError.name;
        return _this;
    }
    return BadOperatorError;
}(Error));
exports.BadOperatorError = BadOperatorError;
/** Class representing a bad array exception. */
var BadArrayError = /** @class */ (function (_super) {
    __extends(BadArrayError, _super);
    function BadArrayError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadArrayError.name;
        return _this;
    }
    return BadArrayError;
}(Error));
exports.BadArrayError = BadArrayError;
/** Class representing a bad shape exception. */
var BadShapeError = /** @class */ (function (_super) {
    __extends(BadShapeError, _super);
    function BadShapeError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadShapeError.name;
        return _this;
    }
    return BadShapeError;
}(Error));
exports.BadShapeError = BadShapeError;
/** Class representing a bad type exception. */
var BadTypeError = /** @class */ (function (_super) {
    __extends(BadTypeError, _super);
    function BadTypeError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadTypeError.name;
        return _this;
    }
    return BadTypeError;
}(Error));
exports.BadTypeError = BadTypeError;
/** Class representing a bad integer exception. */
var BadIntError = /** @class */ (function (_super) {
    __extends(BadIntError, _super);
    function BadIntError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadIntError.name;
        return _this;
    }
    return BadIntError;
}(Error));
exports.BadIntError = BadIntError;
/** Class representing a bad float exception. */
var BadFloatError = /** @class */ (function (_super) {
    __extends(BadFloatError, _super);
    function BadFloatError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadFloatError.name;
        return _this;
    }
    return BadFloatError;
}(Error));
exports.BadFloatError = BadFloatError;
/** Class representing a bad boolean exception. */
var BadBoolError = /** @class */ (function (_super) {
    __extends(BadBoolError, _super);
    function BadBoolError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadBoolError.name;
        return _this;
    }
    return BadBoolError;
}(Error));
exports.BadBoolError = BadBoolError;
/** Class representing a bad string exception. */
var BadStrError = /** @class */ (function (_super) {
    __extends(BadStrError, _super);
    function BadStrError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadStrError.name;
        return _this;
    }
    return BadStrError;
}(Error));
exports.BadStrError = BadStrError;
/** Class representing a bad complex exception. */
var BadComplexError = /** @class */ (function (_super) {
    __extends(BadComplexError, _super);
    function BadComplexError(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = BadComplexError.name;
        return _this;
    }
    return BadComplexError;
}(Error));
exports.BadComplexError = BadComplexError;
